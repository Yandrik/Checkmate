import urllib.parse
from qwen_agent.tools.base import BaseTool, register_tool #type: ignore
import json5


# Step 1 (Optional): Add a custom tool named `my_image_gen`.
@register_tool('fact_checker')
class MyFactChecker(BaseTool):
    # The `description` tells the agent the functionality of this tool.
    description = 'A tool that checks the factuality of a given text. '
    # The `parameters` tell the agent what input parameters the tool has.
    parameters = [{
        'name': 'prompt',
        'type': 'string',
        'description': 'What parts of the text are factual and what parts are not? ',
        'required': True
    }]

    def call(self, params: str, **kwargs) -> str: #type: ignore
        # `params` are the arguments generated by the LLM agent.
        data = json5.loads(params)
        if not isinstance(data, dict) or 'prompt' not in data:
            raise ValueError("Invalid params: expected a dict with a 'prompt' key")
        prompt = urllib.parse.quote(data['prompt'])
        return json5.dumps(
            {'front_end_url': f'https://www.X.com'}, #insert your frontend url here
            ensure_ascii=False)