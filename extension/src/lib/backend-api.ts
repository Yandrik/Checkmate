/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/factcheck": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** HandleFactCheck */
        post: operations["FactcheckHandleFactCheck"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** HandleGet */
        get: operations["HandleGet"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** FactCheckResult */
        FactCheckResult: {
            score: number;
            check_result: string;
            verdict: components["schemas"]["Verdict"];
            sources: components["schemas"]["FactCheckSource"][];
            factoids?: components["schemas"]["Factoid"][] | null;
        };
        /** FactCheckSource */
        FactCheckSource: {
            name: string;
            link: string;
        };
        /** Factoid */
        Factoid: {
            start: number;
            end: number;
            text: string;
            verdict: boolean;
            check_result: string;
            sources: components["schemas"]["FactCheckSource"][];
        };
        /** SearchRequest */
        SearchRequest: {
            title: string;
            url: string;
            content: string;
            html: string;
        };
        /**
         * Verdict
         * @enum {string}
         */
        Verdict: "valid" | "invalid" | "partially valid" | "unsure";
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    FactcheckHandleFactCheck: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SearchRequest"];
            };
        };
        responses: {
            /** @description Document created, URL follows */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FactCheckResult"];
                };
            };
            /** @description Bad request syntax or unsupported method */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        status_code: number;
                        detail: string;
                        extra?: null | {
                            [key: string]: unknown;
                        } | unknown[];
                    };
                };
            };
        };
    };
    HandleGet: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Request fulfilled, document follows */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
}
